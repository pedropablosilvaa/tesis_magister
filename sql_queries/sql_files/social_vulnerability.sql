/*

Esta query tiene como objetivo obtener una tabla final 
con las geometrías, los nombres, y el valor de vulnerabilidad
espacial [0,1]  

*/

-- se elimina la capa de ruteo
DROP TABLE IF EXISTS capas_estaticas.social_vulnerability;

-- se crea la capa de ruteo
CREATE TABLE capas_estaticas.social_vulnerability as 

WITH manzanas AS (
    SELECT
        "FID" as id,
        "COD_ENTIDA" as cod_entidad,
        "PROVINCIA" as provincia,
        "COMUNA" as comuna,
        "PERSONAS" as personas,
        "DE_0_A_5_A" as edad_0_5,
        "DE_65_MAS_" as edad_65_mas,
        geom as geom
    FROM 
        capas_estaticas."censo_2017_XR"
    WHERE
        "DE_0_A_5_A" <> 'Indeterminado'
        AND "DE_65_MAS_" <> 'Indeterminado'
),

cast_values_manz as (
    SELECT
        id,
        cod_entidad,
        provincia,
        comuna,
        CAST(personas as numeric) as personas,
        CAST(edad_0_5 as numeric) as edad_0_5,
        CAST(edad_65_mas as numeric) edad_65_mas,
        geom
    FROM	
		manzanas

),

-- Calcular el valor mínimo y máximo de la columna "poblacion"
min_max_manz AS (
    SELECT
        CAST(MIN(edad_0_5) as numeric) AS min_edad_0_5,
        CAST(MAX(edad_0_5) as numeric) AS max_edad_0_5, 
        CAST(MIN(edad_65_mas) as numeric) AS min_edad_65_mas,
        CAST(MAX(edad_65_mas) as numeric) AS max_edad_65_mas,
        CAST(MIN(personas) as numeric) AS min_personas,
        CAST(MAX(personas) as numeric) AS max_personas
    FROM 
		cast_values_manz

),

final_manz as (
    SELECT
		id,
        personas,
        edad_0_5,
        edad_65_mas,
        (manz.edad_0_5 - min_edad_0_5) / (max_edad_0_5 - min_edad_0_5) as edad_0_5_norm,
        (manz.edad_65_mas - min_edad_65_mas) / (max_edad_65_mas - min_edad_65_mas) as edad_65_mas_norm,
        (manz.personas - min_personas) / (max_personas - min_personas) as personas_norm,
        geom
    FROM cast_values_manz as manz, min_max_manz 
),

entidad AS (
    SELECT
        "FID" as id,
        "PERSONAS" as personas,
        "DE_0_A_5_A" as edad_0_5,
        "DE_65_MAS_" as edad_65_mas,
        geom as geom
    FROM 
        capas_estaticas."entidades_2017_XR"
    WHERE
        "DE_0_A_5_A" <> 'Indeterminado'
        AND "DE_65_MAS_" <> 'Indeterminado'
),

cast_values_entidad as (
    SELECT
        id,
        CAST(personas as numeric) as personas,
        CAST(edad_0_5 as numeric) as edad_0_5,
        CAST(edad_65_mas as numeric) edad_65_mas,
        geom
    FROM	
		entidad

),

-- Calcular el valor mínimo y máximo de la columna "poblacion"
min_max_entidad AS (
    SELECT
        CAST(MIN(edad_0_5) as numeric) AS min_edad_0_5,
        CAST(MAX(edad_0_5) as numeric) AS max_edad_0_5, 
        CAST(MIN(edad_65_mas) as numeric) AS min_edad_65_mas,
        CAST(MAX(edad_65_mas) as numeric) AS max_edad_65_mas,
        CAST(MIN(personas) as numeric) AS min_personas,
        CAST(MAX(personas) as numeric) AS max_personas
    FROM 
		entidad

),

final_entidad as (
    SELECT
		id,
        (entidad.edad_0_5 - min_edad_0_5) / (max_edad_0_5 - min_edad_0_5) as edad_0_5_norm,
        (entidad.edad_65_mas - min_edad_65_mas) / (max_edad_65_mas - min_edad_65_mas) as edad_65_mas_norm,
        (entidad.personas - min_personas) / (max_personas - min_personas) as personas_norm,
        geom
    FROM cast_values_entidad as entidad, min_max_entidad 
)

SELECT
*
FROM 
    final_entidad
--UNION ALL
--SELECT * FROM final_manz


